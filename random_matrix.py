import random

#input: number of rows, cols of ranomd matrix
        # numbers start <= x <= stop - 1
        # step is evenly spaced slice of interval [start stop - 1]
# output: random matrix 
def random_matrix(row, col, start, stop, step):
    B = [[random.randrange(start, stop, step) for j in range(col)] for i in range(row)]
    return B

B = random_matrix(7, 11, 0, 2, 1)
print(B)
#print(len(B) == 7)              # rows == 7 iff True
#print(len(B[0]) == 11)          # cols == 1 iff True

#for i in range(10):                            loop to print random seven by eleven                                                  matrices w entries in {0, 1}
    #print(random_matrix(7, 11, 0, 2, 1))

R1 = [[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1],        # copy paste
      [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], 
      [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], 
      [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], 
      [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], 
      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], 
      [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0]]

R2 = [[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
     [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], 
     [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], 
     [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], 
     [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], 
     [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], 
     [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1]]

R3 = [[0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], 
    [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], 
    [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], 
    [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], 
    [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], 
    [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], 
    [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1]]

R4 = [[1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], 
    [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], 
    [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], 
    [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], 
    [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], 
    [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], 
    [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1]]

R5 = [[0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], 
     [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
     [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], 
     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], 
     [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], 
     [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], 
     [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1]]

R6 = [[0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], 
     [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], 
     [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], 
     [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], 
     [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], 
     [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0],
     [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1]]
     
R7 = [[1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], 
     [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], 
     [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], 
     [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], 
     [0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], 
     [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], 
     [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1]]

R8 = [[0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], 
     [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], 
     [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], 
     [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], 
     [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], 
     [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], 
     [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0]]

R9 = [[1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], 
     [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], 
     [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], 
     [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], 
     [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], 
     [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], 
     [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0]]

R10 = [[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
     [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], 
     [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], 
     [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], 
     [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1],
     [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], 
     [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0]]
     
R = [R1, R2, R3, R4, R5,  R6, R7,  R8,  R9,  R10] # list cubed
print(R[0][:])

# S = [random_matrix(7, 11, 0, 2, 1) for i in range(10)]  list comp. same as above for loop that print random matrix; list^3
# print(S)
S = [[[1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0]],
    [[1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1]], 
    [[1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0]], 
    [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1]], 
    [[0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0]], 
    [[1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]], 
    [[0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0]],
    [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1]], 
    [[0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1]], 
    [[0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1]]]




# input: mztrix sizem, n, random entries evenly spaced between start and stop,how many matrices K
# output: set of random matrices
def set_rand_mtrx(m, n, start, stop, step, K):
    S = [random_matrix(m, n, start, stop, step) for i in range(K) ]
    return S
# print(set_rand_mtrx(3, 4, 0, 11, 1, 3))