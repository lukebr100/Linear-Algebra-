

def gaussian_elim(A): # gets scale factors for ith column
    if  matrix(A) == True and detect_list(A) == False:
        m = len(A)      # store number of sublists in A (rows)
                        #if matrix(A) == True and detect_list(A) == False and len(b) == m:       # checks if list is matrix compatible, there are no order higher than 2 of list of lists and the length of b is length of A
        n = len(A[0])       # store the number of columns of A
        C = [ [0 for _ in range(n)] for _ in range(m) ]      # initailizes a list of lists of all zeros 
        for i in range(n):              # arbitrary column       
            
            k = 0                       # counter
            for j in range(i, m - 1):   # row from i, i + 1, ..., m - 2
                if A[j - k][i] != 0:    # the pivot position is non-zero // j - k is constant in this loop   
                    t = A[j - k][i]     # store pivot
                    C[j + 1][i] = - (A[j + 1][i] / t)               # calculate factor
                    A = rowadd( A, j - k, j + 1, C[j + 1][i])       # perform row op
                    k = k + 1                                       # add to counter
                else: 
                    o = 0
                    for p in range(n):
                        if A[j - k][p] == 0:
                            o = o + 1
                        else:
                            break
                    if o == n:
                        for q in range(j - k + 1, m):
                            a = 0
                            for r in range(n):
                                if A[q][r] == 0:
                                    a = a + 1
                            if a == n:
                                print('row', q, 'is all zeros')
                            
                        #return gaussian_elim(A)
                    else:
                        A = rowswap(A, j - k, o)
                        #return gaussian_elim(A)
                    print('pivot was zero')
            
        return A
    else:
        return "please input a matrix"
    


A = [[1, 2, 3],                               #works, result in REF
    [4, 5, 6], 
    [7, 8, 9]]
print(gaussian_elim( A ))

B = [[1, 2, 3, 4],                           # works
    [5, 6, 7, 8],
    [9, 10, 11, 12]]
print(gaussian_elim( B ), "B")

C = [[1, 2, 3], [4, 5, 6], [7,8, 9], [10, 11, 12]]      # works
print(gaussian_elim( C ))

D = [[1, 1, 0], [1, 0, 1], [0, 1, 1]]           # works
print(gaussian_elim( D ), "D")

E = [[0, 0, 0], [1, 1, 1], [1, 2, 3]]           # matrix NOT in REF
print(gaussian_elim( E ))                       
E1 = [[1, 2, 3], [1, 1, 1], [0, 0, 0]]          # works
print(gaussian_elim( E1 ), "E1")

